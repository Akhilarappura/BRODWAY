<%-include('include/profileHeader')-%>

<style>
  :root {
    --primary-color: #4a90e2;
    --secondary-color: #f3f4f6;
    --accent-color: #ffa41b;
    --text-color: #333333;
    --light-text-color: #757575;
    --border-color: #e0e0e0;
    --success-color: #4caf50;
    --danger-color: #f44336;
  }

  body {
    background-color: var(--secondary-color);
    color: var(--text-color);
    font-family: 'Roboto', sans-serif;
  }

  .container-fluid {
    padding: 1.5rem 9rem;
  }

  .card {
    border: none;
    border-radius: 8px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    transition: box-shadow 0.3s ease;
  }

  .card:hover {
    box-shadow: 0 8px 12px rgba(0, 0, 0, 0.15);
  }

  .card-body {
    padding: 1.5rem;
  }

  .profile-header {
    background-color: white;
    border-radius: 8px;
    padding: 2rem;
    text-align: center;
  }

  .profile-header img {
    width: 150px;
    height: 150px;
    border-radius: 50%;
    object-fit: cover;
    border: 4px solid var(--primary-color);
    margin-bottom: 1rem;
  }

  .settings-box {
    margin-top: 1.5rem;
  }

  .btn-white {
    background-color: white;
    color: var(--text-color);
    border: 1px solid var(--border-color);
    transition: all 0.3s ease;
  }

  .btn-white:hover {
    background-color: var(--secondary-color);
  }

  .dropdown-menu {
    border: none;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  }

  .dropdown-item {
    padding: 0.5rem 1rem;
    color: var(--text-color);
    transition: background-color 0.3s ease;
  }

  .dropdown-item:hover {
    background-color: var(--secondary-color);
  }

  .breadcrumb {
    background-color: transparent;
    padding: 0;
  }

  .breadcrumb-item a {
    color: var(--primary-color);
    text-decoration: none;
  }

  .content {
    background-color: white;
    border-radius: 8px;
    padding: 2rem;
    margin-top: 2rem;
  }

  .content h5 {
    color: var(--primary-color);
    margin-bottom: 1.5rem;
  }

  .btn-success {
    background-color: var(--success-color);
    border: none;
  }

  .btn-success:hover {
    background-color: #43a047;
  }

  .text-muted {
    color: var(--light-text-color) !important;
  }

  #icon {
    cursor: pointer;
    font-size: 1.5rem;
    color: var(--primary-color);
  }

  .file-input {
    display: none;
  }

  @media (max-width: 768px) {
    .container-fluid {
      padding: 1rem;
    }
  }
</style>

<div class="container-fluid py-5">
  <div class="row">
    <div class="col">
      <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
          <li class="breadcrumb-item"><a href="#">Home</a></li>
          <li class="breadcrumb-item"><a href="#">User</a></li>
          <li class="breadcrumb-item active" aria-current="page">User Profile</li>
        </ol>
      </nav>
    </div>
  </div>

  <div class="row">
    <div class="col-lg-3">
      <div class="profile-header">
        <form action="/profileedit" method="post" enctype="multipart/form-data" id="profileForm">
          <div class="position-relative d-inline-block">
            <img id="profileImage" src="/<%= user.profilePicture %>" alt="Profile Picture">
            <label for="fileInput" class="position-absolute bottom-0 end-0 bg-white rounded-circle p-2" style="cursor: pointer;">
              <i class="fas fa-camera text-primary"></i>
            </label>
          </div>
          <input id="fileInput" name="images" type="file" class="file-input" accept="image/*" onchange="previewImage(event)">
 
        </form>
        <h4 class="mt-3">Hello, <%= user.name %></h4>

        <div class="settings-box mt-4">
          <button class="btn btn-white dropdown-toggle w-100" type="button" data-bs-toggle="dropdown" aria-expanded="false">
            Account Settings
          </button>
          <ul class="dropdown-menu w-100">
            <li><a class="dropdown-item" href="/profile">Profile Information</a></li>
            <li><a class="dropdown-item" href="/address">Manage Address</a></li>
          </ul>
        </div>

        <div class="settings-box mt-4">
          <button class="btn btn-white dropdown-toggle w-100" type="button" data-bs-toggle="dropdown" aria-expanded="false">
            My Orders
          </button>
          <ul class="dropdown-menu w-100">
            <li><a class="dropdown-item" href="/orderpage">Orders</a></li>
          </ul>
        </div>

        <div class="settings-box mt-4">
          <button class="btn btn-white dropdown-toggle w-100" type="button" data-bs-toggle="dropdown" aria-expanded="false">
            My Stuff
          </button>
          <ul class="dropdown-menu w-100">
            <li><a class="dropdown-item" href="/wallet">My wallet</a></li>
            <li><a class="dropdown-item" href="/contact">My Reviews</a></li>
            <li><a class="dropdown-item" href="/contact">All Notifications</a></li>
            <li><a class="dropdown-item" href="/wishlist">My Wishlist</a></li>
          </ul>
        </div>

        <div class="settings-box mt-4">
          <a href="/userlogout" class="btn btn-danger w-100">Logout</a>
        </div>
      </div>
    </div>

  


<!-- //orders -->

<div class="col-md-8">
    <div class="osahan-account-page-right shadow-sm bg-white p-4 h-100">
        <div class="tab-content" id="myTabContent">
            <div class="tab-pane fade active show" id="addresses" role="tabpanel" aria-labelledby="addresses-tab">
                <h4 class="font-weight-bold mt-0 mb-4">Orders</h4>
                <div class="container">
                    <div class="row justify-content-center">
                        <div class="col border">
                            <div class="bg-light p-4">
                                <div class="tab-content">
                                    <div class="tab-pane fade show active" id="nav-pending">
                                        <div class="table-responsive">
                                            <table class="table table-borderless">
                                                <tr> 
                                                    
                                                        <th scope="col" class="text-center align-middle" ><h3>SL No.</h3></th>
                                                        <th scope="col" class="text-center align-middle">Payment Status</th>
                                                        <th scope="col" class="text-center align-middle">Order Date</th>
                                                        <th scope="col" class="text-center align-middle">Order Status</th>
                                                        <th scope="col" class="text-center align-middle">Order Total</th>
                                                        <th scope="col" class="text-center align-middle">Actions</th>
                                             
                                            </tr>
                                                
                                                    <% orders.forEach((order, i) => { %>
                                                    <tr>
                                                        <td scope="col" class="text-center align-middle"> <%= i + 1 %> </td>
                                                        <td scope="col" class="text-center align-middle">
                                                            <% if (order.paymentStatus === 'Return Accepted') { %>
                                                                <span class="alert alert-danger">Returned</span>
                                                            <% }
                                                            else if (order.paymentStatus === 'Cancelled') { %>
                                                                <span class="alert alert-danger">Cancelled</span>
                                                            <% }
                                                            else if (order.paymentStatus === 'Delivered') { %>
                                                                <span class="payment-status-completed">Completed</span>
                                                            <% } else if (order.paymentStatus === 'Pending') { %>
                                                                <span class="payment-status-pending">Pending</span>
                                                            <% } else if (order.paymentStatus === 'Shipped') { %>
                                                                <span class="payment-status-shipped">Shipped</span>
                                                            <% } else { %>
                                                                <span class="alert alert-warning"><%= order.paymentStatus %></span>
                                                            <% } %>
                                                        </td>
                                                        <td scope="col" class="text-center align-middle">                                   
                                                             <%= new Date(order.orderedDate).toDateString() %>
                                                        </td>
                                                    
                                                        <td scope="col" class="text-center align-middle">
                                                            <% if (order.status === 'Return Accepted') { %>
                                                                <span class="alert alert-danger">Returned</span>
                                                            <% }
                                                    
                                                            else if (order.status === 'Cancelled') { %>
                                                                <span class="alert alert-danger">Cancelled</span>
                                                            <% }
                                                    
                                                             else if (order.status === 'Pending') { %>
                                                                <span class="alert alert-danger">Pending</span>
                                                            <% } else if (order.status === 'Shipped') { %>
                                                                <span class="alert alert-warning">Shipped</span>
                                                            <% } else if (order.status === 'Delivered') { %>
                                                                <span class="alert alert-success">Delivered</span>
                                                            <%} else if (order.status === 'failed') { %>
                                                                <span class="alert alert-danger">failed</span> <% } %>     
                                                        </td>
                                                        <td scope="col" class="text-center align-middle">&#x20a8; <%= order.totalAmount %></td>
                                                        <td scope="col" class="text-center align-middle">
                                                            <div class="d-flex flex-column align-items-center">
                                                                <% if (order.status == 'Completed') { %>
                                                                    <p class="text-danger">paid</p>
                                                                 <%  }else if (order.status == 'Return Accepted') { %>
                                                                    <p class="text-danger">Returned</p>
                                                                <% }else if (order.status == 'Cancelled') { %>
                                                                    <p class="text-danger">Cancelled</p>
                                                                <% }else if (order.status !== 'Delivered') { %>
                                                                  
                                                                    <button class="btn btn-danger text-white mb-2 cancel-btn" data-order-id="<%= order._id %>">Cancel</button>
                                                                      
                                                                <% } else { %>
                                                                    <button class="btn btn-secondary text-white mb-2 return-btn" data-order-id="<%= order._id %>">Return</button>
                                                                <% } if(order.status=='failed'){%>
                                                                <button class="btn btn-success text-white mb-2 retry-payment-btn" data-order-id="<%= order._id %>">Retry</button>     
                                                                    <% }%>
                                                                <a href="/viewsingleorder?id=<%= order._id %>">
                                                                    <button class="btn btn-success text-white view-order-btn">View</button>
                                                                </a>
                                                            </div>
                                                        </td>
                                                    
                                                    </tr>
                                                
                                                    <% }) %>
                                                
                                                
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
</div>
<!-- pagination -->
                    <div class="row">
                        <div class="col-lg-12 text-center">
                            <div class="pagination-wrap">
                                <ul class="pagination" style="justify-content: center;">
                                    <li class="page-item <%= page == 1 ? 'disabled' : '' %>">
                                        <a class="page-link"
                                            href="?page=<%= page - 1 %><%= sortOption ? '&sortOption=' + sortOption : '' %><%= order ? '&order=' + order : '' %><%= search ? '&search=' + search : '' %>"
                                            aria-label="Previous">
                                            <span aria-hidden="true"><i class="icon-long-arrow-left"></i></span>Prev
                                        </a>
                                    </li>

                                    <% for (let i=1; i <=totalPages; i++) { %>
                                        <li class="page-item <%= page == i ? 'active' : '' %>">
                                            <a class="page-link"
                                                href="?page=<%= i %><%= sortOption ? '&sortOption=' + sortOption : '' %><%= order ? '&order=' + order : '' %><%= search ? '&search=' + search : '' %>">
                                                <%= i %>
                                            </a>
                                        </li>
                                        <% } %>

                                            <li class="page-item <%= page == totalPages ? 'disabled' : '' %>">
                                                <a class="page-link"
                                                    href="?page=<%= page + 1 %><%= sortOption ? '&sortOption=' + sortOption : '' %><%= order ? '&order=' + order : '' %><%= search ? '&search=' + search : '' %>"
                                                    aria-label="Next">
                                                    Next <span aria-hidden="true"><i
                                                            class="icon-long-arrow-right"></i></span>
                                                </a>
                                            </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                    <!-- end of pagination -->
</div>





<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/magnific-popup.js/1.1.0/jquery.magnific-popup.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
<script>

  $('#search').on('input', function() {
        const searchTerm = $(this).val(); // Get the search term from the input field
        if (searchTerm.trim() !== '') {
            // Send AJAX request to the server
            $.get('/search', { q: searchTerm }, function(results) {
                // Clear previous results
                $('#search-results-container').empty();
                // Display search results
                results.forEach(function(product) {
                    // Append each product with an <a> tag linking to the product detail page
                    $('#search-results-container').append(`<div class="my-2 border-bottom"><a href="/prodetail?id=${product._id}" class="text-decoration-none ms-2 my-2 text-black">${product.product_name}</a></div>`);
                });
            });
        } else {
            // If the search input is empty, clear results
            $('#search-results-container').empty();
        }
    });
  function validateForm() {
        const inputs = document.querySelectorAll('input[type="text"], textarea');

        for (let i = 0; i < inputs.length; i++) {
            
            if (inputs[i].value.trim() === '') {
         
              Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Please fill out all fields.',
                });
                
                inputs[i].focus();
                 
                return false;
            }
        }

        return true;
    }
  </script>
  <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', () => {
        console.log('User order page loaded');

        // Listen for clicks on the Retry Payment buttons
        document.querySelectorAll('.retry-payment-btn').forEach(button => {
            button.addEventListener('click', () => {
                const orderId = button.getAttribute('data-order-id');
                console.log('Retry payment button clicked for order:', orderId);

                // Make a POST request to your backend to initiate retry payment
                fetch('/retryPayment', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ orderId })
                })
                .then(res => res.json())
                .then(res => {
                    if (!res.success) {
                        console.error('Failed to initiate retry payment:', res.message);
                        alert('Failed to initiate retry payment.');
                        return;
                    }

                    console.log("Razorpay order data", res);

                    const options = {
                        "key": "rzp_test_Yf4QX1fH3V3BDE", // Replace with your Razorpay Key ID
                        "amount": res.order.amount, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise
                        "currency": "INR",
                        "name": 'BRODWAY', // Your business name
                        "description": "Test Transaction",
                        "image": "",
                        "order_id": res.order.id, // This is the Order ID received from your backend
                        "callback_url": `/paymentSucces?orderId=${orderId}`, // URL to handle payment callback
                        "prefill": {
                            // "name": "Gaurav Kumar", // Your customer's name
                            // "email": "",
                            // "contact": "" // Provide the customer's phone number for better conversion rates 
                        },
                        "notes": {
                            "address": "Razorpay Corporate Office"
                        },
                        "theme": {
                            "color": "#3399cc"
                        }
                    };

                    const rzp1 = new Razorpay(options);

                    rzp1.on('payment.failed', function (response) {
                        console.error("Payment failed:", response);
                        // alert("Payment failed. Redirecting to orders page.");

                        // Example: Update order status on payment failure
                        fetch('/failurePayment', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({ orderId: res.order.id, status: 'Pending' }),
                        }).then(() => {
                            window.location.href = '/orderpage'; // Redirect to the orders page
                        }).catch(error => {
                            console.error("Error updating order status:", error);
                        });
                    });

                    // Open Razorpay checkout
                    rzp1.open();
                })
                .catch(error => {
                    console.error("Error in Razorpay payment:", error);
                  
                });
            });
        });
    });
</script>


<script>
    document.addEventListener('DOMContentLoaded', () => {
        function addEventListenersToButtons() {
            const viewOrderBtns = document.querySelectorAll('.view-order-btn');
            const cancelBtns = document.querySelectorAll('.cancel-btn');
            const returnBtns = document.querySelectorAll('.return-btn');

            viewOrderBtns.forEach(btn => {
                btn.addEventListener('click', function () {
                    const orderId = this.getAttribute('data-order-id');
                    const url = `/viewsingleorder?oid=${orderId}`;
                    window.location.href = url;
                });
            });

            cancelBtns.forEach(btn => {
                btn.addEventListener('click', function () {
                    const orderId = this.getAttribute('data-order-id');
                    console.log('orderId',orderId);
                    Swal.fire({
                        title: "Are you sure?",
                        text: "Cancel this order?",
                        icon: "warning",
                        input: 'text',
                        inputPlaceholder: 'Please provide a reason',
                        showCancelButton: true,
                        confirmButtonColor: "#3085d6",
                        cancelButtonColor: "#d33",
                        confirmButtonText: "Ok",
                    }).then((result) => {
                        if (result.isConfirmed && result.value) {
                            const reason = result.value;
                            fetch(`/cancelOrder/${orderId}?reason=${encodeURIComponent(reason)}`, {
                                method: "GET",
                            })
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    Swal.fire({
                                        title: "Cancelled!",
                                        text: data.message,
                                        icon: "success",
                                        showClass: {
                                            popup: 'animate__animated animate__fadeInDown'
                                        },
                                        hideClass: {
                                            popup: 'animate__animated animate__fadeOutUp'
                                        }
                                    }).then(() => {
                                        window.location.reload();
                                    });
                                } else {
                                    Swal.fire({
                                        title: "Failed!",
                                        text: data.message,
                                        icon: "error",
                                        showClass: {
                                            popup: 'animate__animated animate__shakeX'
                                        },
                                        hideClass: {
                                            popup: 'animate__animated animate__fadeOutUp'
                                        }
                                    });
                                }
                            })
                            .catch(error => {
                                console.error("Error:", error);
                                Swal.fire({
                                    title: "Error!",
                                    text: "Something went wrong.",
                                    icon: "error",
                                    showClass: {
                                        popup: 'animate__animated animate__shakeX'
                                    },
                                    hideClass: {
                                        popup: 'animate__animated animate__fadeOutUp'
                                    }
                                });
                            });
                        }
                    });
                });
            });

            returnBtns.forEach(btn => {
                btn.addEventListener('click', function () {
                    const orderId = this.getAttribute('data-order-id');
                    Swal.fire({
                        title: "Are you sure?",
                        text: "Return this order?",
                        icon: "warning",
                        showCancelButton: true,
                        confirmButtonColor: "#3085d6",
                        cancelButtonColor: "#d33",
                        confirmButtonText: "Yes, return it!",
                    }).then((result) => {
                        console.log(result,"result");
                        if (result.isConfirmed) {
                            fetch(`/returnOrder/${orderId}`, {
                                method: "POST",
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify({ orderId: orderId })
                            })
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    Swal.fire({
                                        title: "Returned!",
                                        text: data.message,
                                        icon: "success",
                                        showClass: {
                                            popup: 'animate__animated animate__fadeInDown'
                                        },
                                        hideClass: {
                                            popup: 'animate__animated animate__fadeOutUp'
                                        }
                                    }).then(() => {
                                        window.location.reload();
                                    });
                                } else {
                                    Swal.fire({
                                        title: "Failed!",
                                        text: data.message,
                                        icon: "error",
                                        showClass: {
                                            popup: 'animate__animated animate__shakeX'
                                        },
                                        hideClass: {
                                            popup: 'animate__animated animate__fadeOutUp'
                                        }
                                    });
                                }
                            })
                            .catch(error => {
                                console.error("Error:", error);
                                Swal.fire({
                                    title: "Error!",
                                    text: "Something went wrong.",
                                    icon: "error",
                                    showClass: {
                                        popup: 'animate__animated animate__shakeX'
                                    },
                                    hideClass: {
                                        popup: 'animate__animated animate__fadeOutUp'
                                    }
                                });
                            });
                        }
                    });
                });
            });
        }

        // Initial call to add event listeners to buttons
        addEventListenersToButtons();
    });
</script>
<!-- <script>
             
             function previewImage(event) {
               var reader = new FileReader();
               reader.onload = function(){
                 var output = document.getElementById('profileImage');
                 output.src = reader.result;
               }
               reader.readAsDataURL(event.target.files[0]);
             }
           </script> -->





 <script>
    document.addEventListener('DOMContentLoaded', () => {
        document.querySelectorAll('.status-dropdown').forEach(select => {
            select.addEventListener('change', async (event) => {
                const orderId = event.target.getAttribute('data-order-id');
                const newStatus = event.target.value;

                let url;
                if (newStatus === 'Shipped') {
                    url = `/statusshipped/${orderId}`;
                } else if (newStatus === 'Delivered') {
                    url = `/statusdelivered/${orderId}`;
                }

                if (url) {
                    try {
                        const response = await fetch(url, { method: 'GET' });
                        const result = await response.json();

                        if (result.success) {
                            Swal.fire({
                                title: 'Success!',
                                text: 'Order status updated successfully',
                                icon: 'success',
                                showClass: {
                                    popup: 'animate__animated animate__fadeInDown'
                                },
                                hideClass: {
                                    popup: 'animate__animated animate__fadeOutUp'
                                }
                            }).then(() => {
                                window.location.reload();
                            });
                        } else {
                            Swal.fire({
                                title: 'Failed!',
                                text: 'Failed to update order status',
                                icon: 'error',
                                showClass: {
                                    popup: 'animate__animated animate__shakeX'
                                },
                                hideClass: {
                                    popup: 'animate__animated animate__fadeOutUp'
                                }
                            });
                        }
                    } catch (error) {
                        console.error('Error updating order status:', error);
                        Swal.fire({
                            title: 'Error!',
                            text: 'An error occurred while updating the order status',
                            icon: 'error',
                            showClass: {
                                popup: 'animate__animated animate__shakeX'
                            },
                            hideClass: {
                                popup: 'animate__animated animate__fadeOutUp'
                            }
                        });
                    }
                }
            });              
        });
    });
</script>
    <script src="/js/wishlist.js"></script>


    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js" integrity="sha512-v2CJ7UaYy4JwqLDIrZUI/4hqeoQieOmAZNXBeQyjo21dadnwR+8ZaIJVT8EE2iyI61OV8e6M8PP2/4hpQINQ/g==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js" integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.min.js" integrity="sha384-BBtl+eGJRgqQAUMxJ7pMwbEyER4l1g+O15P+16Ep7Q9Q+zqX6gSbd85u4mG4QzX+" crossorigin="anonymous"></script>
</head>





<%-include('footer')-%>